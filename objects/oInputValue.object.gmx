<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

str = "";
text = "";
col = c_white;
key = -1;

switch(global.inputText)
{
    case 0:
        text = "RED";
        str = string(global.red);
        col = c_red;
    break;
    
    case 1:
        text = "GREEN";
        str = string(global.green);
        col = c_lime;
    break;
    
    case 2:
        text = "BLUE";
        str = string(global.blue);
        col = c_blue;
    break;
    
    case 3:
        text = "Music Volume";
        str = string(global.volume);
        col = c_white;
    break;
    
    case 4:
        text = "SFX Volume";
        str = string(global.gamevolume);
        col = c_white;
    break;
    
    case 5:
        text = "Dog Frequency";
        str = string(global.dogtime);
        col = c_white;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set to max val if greater than

if global.inputText = 0 || global.inputText = 1 || global.inputText = 2 {
    if real(str) &gt; 255 {
        str = "255"
    }
}

if global.inputText = 3 || global.inputText = 4 {
    if real(str) &gt; 100 {
        str = "100"
    }
}

if global.inputText = 5 {
    if real(str) &gt; 999 {
        str = "999"
    }
}

if string_length(str) &gt; 3 {
    str = string_delete(str, string_length(str), 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keyboard checks

if keyboard_check_pressed(ord('0')) || keyboard_check_pressed(vk_numpad0)
{key = 0;}

if keyboard_check_pressed(ord('1')) || keyboard_check_pressed(vk_numpad1)
{key = 1;}

if keyboard_check_pressed(ord('2')) || keyboard_check_pressed(vk_numpad2)
{key = 2;}

if keyboard_check_pressed(ord('3')) || keyboard_check_pressed(vk_numpad3)
{key = 3;}

if keyboard_check_pressed(ord('4')) || keyboard_check_pressed(vk_numpad4)
{key = 4;}

if keyboard_check_pressed(ord('5')) || keyboard_check_pressed(vk_numpad5)
{key = 5;}

if keyboard_check_pressed(ord('6')) || keyboard_check_pressed(vk_numpad6)
{key = 6;}

if keyboard_check_pressed(ord('7')) || keyboard_check_pressed(vk_numpad7)
{key = 7;}

if keyboard_check_pressed(ord('8')) || keyboard_check_pressed(vk_numpad8)
{key = 8;}

if keyboard_check_pressed(ord('9')) || keyboard_check_pressed(vk_numpad9)
{key = 9;}

if keyboard_check_released(vk_anykey)
{key = -1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get input

// Delete character
if instance_exists(oInputValue) &amp;&amp; keyboard_check_pressed(vk_backspace) || keyboard_check_pressed(vk_delete) {
    str = string_delete(str, string_length(str), 1);
}

if global.boxClick = 1 &amp;&amp; global.boxID.box = 11 {
    str = string_delete(str, string_length(str), 1);
    global.boxClick = 0; 
}

// Enter new value
if global.boxClick = 1 &amp;&amp; global.boxID.box = 12 {
    newValue();
    instance_destroy();
}

if instance_exists(oInputValue) &amp;&amp; keyboard_check_pressed(vk_enter) {
    newValue();
    instance_destroy();
}

if global.boxClick = 1 &amp;&amp; global.boxID.box &gt;= 0 &amp;&amp; global.boxID.box &lt;= 9 {
    str += string(global.boxID.box);
    global.boxClick = 0;
}

// Keyboard input
if instance_exists(oInputValue) &amp;&amp; key != -1
{
    str += string(key);
    key = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text

draw_set_font(global.font);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(col);
draw_text_transformed(oMenu2.x + (oMenu2.sprite_width / 2), oMenu2.y + 32, text, 2, 2, 0);
draw_set_color(c_white);
draw_text_transformed(oMenu2.x + (oMenu2.sprite_width / 2), oMenu2.y + 64, "----------", 2, 2, 0);
draw_text_transformed(x, y, string(str), 2, 2, 0);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
