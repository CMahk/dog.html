<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMenu2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite / variables

x = (room_width / 2) - sprite_width;
y = -362;

image_speed = 0
image_index = 0

image_xscale = 2
image_yscale = 2

global.font = font_add_sprite(sText, ord('!'), 1, 1);
global.numFont = font_add_sprite(sNumber, ord('0'), 0, 0);
global.boxHover = 0; // Primary boxes
global.boxHover2 = 0; // Secondary boxes
global.boxClick = 0;
global.boxID = -1;
global.inputValue = "";
global.inputText = -1;
global.onOff = 1;
global.version = "v1.1.3";

open = 0;
change = 0;
menu = 1;

box[0] = "Random colors:"
box[1] = "Manual colors"
box[2] = "Music volume:"
box[3] = "SFX volume:"
box[4] = "Dog frequency:"
box[5] = "Credits"
box[6] = "Changelog"
box[7] = "Reset page"
box[8] = "Close menu"

man[0] = "Red:"
man[1] = "Green:"
man[2] = "Blue:"
man[3] = "Return"

input[11] = "DELETE"
input[12] = "ENTER"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 'Input value' boxes

a = 0;
b = 0;
i = 0;

// For values 1 - 9
for(a = 0; a &lt;= 2; a++)
{
    for(b = 0; b &lt;= 2; b++)
    {
        i++;
        var boxType = instance_create(x + 18 + (b * 32) + (b * 16), y + 164 + (a * 32) + (a * 16), oBoxNum);
        with(boxType) {
        box = oMenu2.i;
        text = oMenu2.i;
        }
    }
}

// For value 0
var boxType = instance_create(x + 66, y + 308, oBoxNum);
with(boxType) {
    box = 0;
    text = 0;
}

// For input boxes (ENTER, DELETE, etc.)

a = 0;
i = 10;

for(a = 0; a &lt;= 1; a++)
{
    i++
    var boxType = instance_create(x + 220, y + 164 + (a * 36) + (a * 12), oBoxNum2);
    with(boxType) {
    box = oMenu2.i;
    text = oMenu2.input[oMenu2.i];
    }
}

instance_create(x + sprite_width / 2, y + sprite_height / 4, oInputValue);

global.boxHover = 0;
menu = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 'Manual colors' boxes

i = 0;
for(i = 0; i &lt;= 3; i++)
{
    var boxType = instance_create(x + 6, y + 28 + (32 * i), oBox2nd);
    with(boxType) {
    
        box = oMenu2.i; 
        text = oMenu2.man[oMenu2.i];
        
        if box = 0 {
            modifier[0] = global.red;
        }
        
        if box = 1 {
            modifier[0] = global.green;
        }
        
        if box = 2 {
            modifier[0] = global.blue;
        }
    }
}

instance_create(x + (sprite_width / 2), y + (sprite_height - sprite_height / 4), oColor);

global.boxHover = 0;
menu = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu boxes

i = 0;
for(i = 0; i &lt;= 8; i++)
{
    var boxType = instance_create(x + 6, y + 28 + (32 * i), oBox2);
    with(boxType) {
    
        box = oMenu2.i; 
        text = oMenu2.box[oMenu2.i];
        
        if box = 0 {
            modifier[0] = "Off";
            modifier[1] = "On";
            ini_open('settings.ini');
            var iniVal = ini_read_real('Colors', 'randomcol', 1);
            ini_close();
            modVal = iniVal;
        }
        
        if box = 2 {
            modifier[0] = global.volume;
        }
        
        if box = 3 {
            modifier[0] = global.gamevolume;
        }
        
        if box = 4 {
            modifier[0] = global.dogtime;
        }
    }
}

// Version number
instance_create(x + 266, y + 322, oVersion);

global.boxHover = 0;
menu = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open / close menu

switch(change)
{
case 1:
if open = 1
{
    if y &lt; 8
    {
        y += 20;
    }
    else
    {
        y = 8;
        change = 2;
    }
}

if open = 0
{
    if instance_exists(oBox2) { 
        with(oBox2) {instance_destroy();} 
        with(oVersion) {instance_destroy();}
    }
    
    if y &gt; -362
    {
        y -= 20;
    }
    else
    {
        y = -362
        change = 0;
    }
}
break;

case 2:
    alarm[0] = 2;
    change = 0;
break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute action (primary menu)

if global.boxClick = 1 &amp;&amp; menu = 1
{
    switch(global.boxHover)
    {
        case 0:
        // Random colors
        switch(global.randomcol)
        {
            case 0:
                global.randomcol = 1;
                with(global.boxID) {modVal = 1;}
                global.onOff = 1;
                save();
            break;
            
            case 1:
                global.randomcol = 0;
                with(global.boxID) {modVal = 0;}
                global.onOff = 0;
                save();
            break;
        }
        break;
        
        case 1:
        // Manual colors
            with(oBox2) {instance_destroy();}
            with(oVersion) {instance_destroy();}
            alarm[1] = 2;
        break;
        
        case 2:
        // Music volume
            global.inputText = 3;
            with(oBox2) {instance_destroy();}
            with(oVersion) {instance_destroy();}
            alarm[2] = 2;
        break;
        
        case 3:
        // SFX volume
            global.inputText = 4;
            with(oBox2) {instance_destroy();}
            with(oVersion) {instance_destroy();}
            alarm[2] = 2;
        break;
        
        case 4:
        // Dog frequency
            global.inputText = 5;
            with(oBox2) {instance_destroy();}
            with(oVersion) {instance_destroy();}
            alarm[2] = 2;
        break;
        
        case 5:
        // Credits
            instance_create(x, y, oTransition);
            change = 1;
            open = 0;
            oDogSettings.click = 0;
            save();
        break;
        
        case 6:
        // Changelog
            url_open_full("http://pastebin.com/zaFWsQGC", "_self", "");
        break;
        
        case 7:
        // Reset page
            audio_stop_sound(snDog);
            reset();
            save();
            game_restart();
        break;
        
        case 8:
        // Close menu
            change = 1;
            open = 0;
            oDogSettings.click = 0;
            save();
        break;
    }
    global.boxClick = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute action (secondary menu)

if global.boxClick = 1 &amp;&amp; menu = 2
{
    switch(global.boxHover2)
    {
        case 0:
        // Red
            global.inputText = 0;
            with(oBox2nd) {instance_destroy();}
            with(oColor) {instance_destroy();}
            global.randomcol = 0;
            global.onOff = 0;
            alarm[2] = 2;
        break;
        
        case 1:
        // Green
            global.inputText = 1;
            with(oBox2nd) {instance_destroy();}
            with(oColor) {instance_destroy();}
            global.randomcol = 0;
            global.onOff = 0;
            alarm[2] = 2;
        break;
        
        case 2:
        // Blue
            global.inputText = 2;
            with(oBox2nd) {instance_destroy();}
            with(oColor) {instance_destroy();}
            global.randomcol = 0;
            global.onOff = 0;
            alarm[2] = 2;
        break;
        
        case 3:
        // Return
            with(oBox2nd) {instance_destroy();}
            with(oColor) {instance_destroy();}
            alarm[0] = 2;
        break;
    }
    global.boxClick = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
