<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite

image_speed = 0
image_index = 0

image_xscale = 2
image_yscale = 2

x = room_width/2 - 172
y = -362

global.numFont = font_add_sprite(sNumber, ord('0'), 0, 0)
open = 0;
menu = 1;
switcha = 0;
switchb = 0;

alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// switchb
switchb = 1
switcha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save to settings.ini

fileId = ini_open('settings.ini')

ini_write_real('Colors', 'randomcol', global.randomcol)
ini_write_real('Colors', 'red', global.red)
ini_write_real('Colors', 'green', global.green)
ini_write_real('Colors', 'blue', global.blue)

ini_write_real('Volume', 'music', global.volume)
ini_write_real('Volume', 'sound', global.gamevolume)

ini_write_real('Time', 'dogtime', global.dogtime)

ini_close()

alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// switcha
switcha = 1
switchb = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open

if keyboard_check_pressed(ord('C'))
{
switch(open)
    {
    case 0:
    open = 1; image_index = 0; menu = 1;
    break;
    
    case 1:
    open = 0;
    alarm[0] = 2
    break;
    }
}

if open = 1
{
if y &lt; 8
    {
    y += 20
    }
    else
    {y = 8}
}

if open = 0
{
if y &gt; -362
    {
    y -= 20
    }
    else
    {y = -362 alarm[1] = 2}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu 1

if keyboard_check_pressed(vk_down) &amp;&amp; open = 1 &amp;&amp; menu = 1
    {
    switch(image_index)
        {
        case 0:
        image_index = 1
        break;
        
        case 1:
        image_index = 2
        break;
        
        case 2:
        image_index = 3
        break;
        
        case 3:
        image_index = 4
        break;
        
        case 4:
        image_index = 5
        break;
        
        case 5:
        image_index = 6
        break;
        
        case 6:
        image_index = 0
        break;
        }
    }
    
if keyboard_check_pressed(vk_up) &amp;&amp; open = 1 &amp;&amp; menu = 1
    {
    switch(image_index)
        {
        case 0:
        image_index = 6
        break;
        
        case 1:
        image_index = 0
        break;
        
        case 2:
        image_index = 1
        break;
        
        case 3:
        image_index = 2
        break;
        
        case 4:
        image_index = 3
        break;
        
        case 5:
        image_index = 4
        break;
        
        case 6:
        image_index = 5
        break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu 1 Z

if keyboard_check_pressed(ord('Z')) &amp;&amp; open = 1 &amp;&amp; menu = 1 &amp;&amp; switcha = 1
{
if image_index = 0
    {
    
    switch(global.randomcol)
        {
        case 0:
            global.randomcol = 1;
        break;
        
        case 1:
            global.randomcol = 0;
        break;
        }
    }

if image_index = 1
    {
    menu = 2;
    image_index = 5
    alarm[2] = 2
    }

if image_index = 2
    {
    global.volume = get_integer("Enter volume amount (0 - 100)", global.volume);
    
    if global.volume &gt; 100
        {global.volume = 100}
    
    if global.volume &lt; 0
        {global.volume = 0}
        
    audio_sound_gain(snDog, global.volume / 100, 0)
    }
    
if image_index = 3
    {
    global.gamevolume = get_integer("Enter SFX volume amount (0 - 100)", global.gamevolume);
    
    if global.gamevolume &gt; 100
        {global.gamevolume = 100}
    
    if global.gamevolume &lt; 0
        {global.gamevolume = 0}
        
     audio_sound_gain(snDog, global.gamevolume / 100, 0)
    }

if image_index = 4
    {
    global.dogtime = get_integer("Enter delay in ticks per dog (60 ticks per second)", global.dogtime);
    
    if global.dogtime &gt; 999
        {global.dogtime = 999}
    if global.dogtime &lt; 0
        {global.dogtime = 0; oDog.alarm[1] = global.dogtime; show_message("Dogs can't spawn in the past! (Dogs disabled)")}
        
    }
    
if image_index = 5
    {
    instance_create(x, y, oTransition)
    }
    
if image_index = 6
    {
    url_open_full("http://pastebin.com/zaFWsQGC", '_blank', 'resizable = 1, height = 256, scrollbars = 1')
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu 2

if keyboard_check_pressed(vk_down) &amp;&amp; open = 1 &amp;&amp; menu = 2
    {
    switch(image_index)
        {
        case 7:
        image_index = 8
        break;
        
        case 8:
        image_index = 9
        break;
        
        case 9:
        image_index = 7
        break;
        }
    }
    
if keyboard_check_pressed(vk_up) &amp;&amp; open = 1 &amp;&amp; menu = 2
    {
    switch(image_index)
        {
        case 7:
        image_index = 9
        break;
        
        case 8:
        image_index = 7
        break;
        
        case 9:
        image_index = 8
        break;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu 2 Z

if keyboard_check_pressed(ord('Z')) &amp;&amp; open = 1 &amp;&amp; menu = 2 &amp;&amp; switchb = 1
{
    if image_index = 7
    {
    global.red = get_integer("Enter red RGB value (0 - 255)", global.red)
    
    if global.red &gt; 255
    {global.red = 255}
    if global.red &lt; 0
    {global.red = 0}
    }
    
    if image_index = 8
    {
    global.green = get_integer("Enter green RGB value (0 - 255)", global.green)
    
    if global.green &gt; 255
    {global.green = 255}
    if global.green &lt; 0
    {global.green = 0}
    }
    
    if image_index = 9
    {
    global.blue = get_integer("Enter blue RGB value (0 - 255)", global.blue)
    
    if global.blue &gt; 255
    {global.blue = 255}
    if global.blue &lt; 0
    {global.blue = 0}
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu X

if keyboard_check_pressed(ord('X'))
{
    if image_index &lt;= 6
    {
    open = 0
    switcha = 0
    switchb = 0
    }
    
    if image_index &gt;= 7
    {
    menu = 1
    image_index = 0
    alarm[0] = 2
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw sprite

draw_self();

if menu = 1
{
draw_sprite_ext(sNoYes, global.randomcol, x + 232, y + 36, 2, 2, 0, c_white, 1)
draw_set_font(global.numFont)
draw_set_color(c_white)
draw_text_ext_transformed(x + 220, y + 100, global.volume, 0, 64, 2, 2, 0)
draw_text_ext_transformed(x + 190, y + 132, global.gamevolume, 0, 64, 2, 2, 0)
draw_text_ext_transformed(x + 230, y + 164, global.dogtime, 0, 64, 2, 2, 0)
draw_set_color(c_black)
}

if menu = 2
{
draw_set_font(global.numFont)
draw_set_color(c_white)
draw_text_ext_transformed(x + 174, y + 36, global.red, 0, 64, 2, 2, 0)
draw_text_ext_transformed(x + 202, y + 68, global.green, 0, 64, 2, 2, 0)
draw_text_ext_transformed(x + 188, y + 100, global.blue, 0, 64, 2, 2, 0)
draw_set_color(c_black)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open menu

if open = 0
{
open = 1
alarm[0] = 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
